{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/Widgets/ToDoList.js","components/RctSectionLoader/RctSectionLoader.js"],"names":["createSvgIcon","React","createElement","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","cloneElement","fontSize","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","TodoListWidget","state","toDoListData","sectionReload","addNewTodoDialog","newTodo","todoTitle","time","date","snackbar","snackbarMessage","handleClose","setState","addNewTodo","todos","title","completed","self","setTimeout","push","this","getTodo","api","get","then","response","data","catch","error","e","task","stopPropagation","index","indexOf","splice","value","selectedTodoIndex","newState","update","$set","className","autoHeight","autoHeightMin","autoHeightMax","autoHide","map","key","button","onClick","handleChange","classnames","control","onChange","event","target","variant","onDeleteTask","opnAddNewTodoDialog","id","open","onClose","aria-labelledby","margin","label","fullWidth","InputLabelProps","shrink","anchorOrigin","vertical","horizontal","autoHideDuration","snackbarcontentprops","message","Component","RctSectionLoader"],"mappings":"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","file":"static/js/65.8a988681.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","/**\n * Todo List Widget\n */\nimport React, { Component, Fragment } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport update from 'react-addons-update';\nimport classnames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// api\nimport api from '../../api';\n\n// intl messages\nimport IntlMessages from '../../util/IntlMessages';\n\n// rct section loader\nimport RctSectionLoader from '../../components/RctSectionLoader/RctSectionLoader';\nimport { Fab } from '@material-ui/core';\n\nexport default class TodoListWidget extends Component {\n\n   state = {\n      toDoListData: null,\n      sectionReload: false,\n      addNewTodoDialog: false,\n      newTodo: {\n         todoTitle: '',\n         time: null,\n         date: ''\n      },\n      snackbar: false,\n      snackbarMessage: ''\n   }\n\n   componentDidMount() {\n      this.getTodo();\n   }\n\n   // get todo\n   getTodo() {\n      this.setState({ sectionReload: true });\n      api.get('todo.js')\n         .then((response) => {\n            this.setState({ toDoListData: response.data, sectionReload: false });\n         }).catch(error => {\n            this.setState({ toDoListData: null, sectionReload: false });\n         })\n   }\n\n   /**\n    * On Delete Task\n    */\n   onDeleteTask(e, task) {\n      e.stopPropagation();\n      this.setState({ sectionReload: true })\n      let todos = this.state.toDoListData;\n      let index = todos.indexOf(task);\n      let self = this;\n      setTimeout(() => {\n         todos.splice(index, 1);\n         self.setState({\n            toDoListData: todos,\n            sectionReload: false,\n            snackbar: true,\n            snackbarMessage: 'Todo Deleted Successfully'\n         });\n      }, 1500);\n   }\n\n   // on change task status\n   handleChange(value, data) {\n      let selectedTodoIndex = this.state.toDoListData.indexOf(data);\n      let newState = update(this.state, {\n         toDoListData: {\n            [selectedTodoIndex]: {\n               completed: { $set: value }\n            }\n         }\n      });\n      this.setState({ sectionReload: true });\n      let self = this;\n      setTimeout(() => {\n         self.setState({ toDoListData: newState.toDoListData, sectionReload: false, snackbar: true, snackbarMessage: 'Todo Updated' });\n      }, 1500);\n   }\n\n   // open add new todo dialog\n   opnAddNewTodoDialog() {\n      this.setState({ addNewTodoDialog: true });\n   }\n\n   // handle close add new todo dailog\n   handleClose = () => {\n      this.setState({ addNewTodoDialog: false });\n   }\n\n   // add new todo\n   addNewTodo = () => {\n      if (this.state.newTodo.todoTitle !== '' && this.state.newTodo.date) {\n         let todos = this.state.toDoListData;\n         let newTodo = {\n            title: this.state.newTodo.todoTitle,\n            date: this.state.newTodo.date,\n            completed: false\n         }\n         this.setState({ sectionReload: true, addNewTodoDialog: false });\n         let self = this;\n         setTimeout(() => {\n            todos.push(newTodo);\n            self.setState({\n               toDoListData: todos,\n               addNewTodoDialog: false,\n               sectionReload: false,\n               snackbar: true,\n               snackbarMessage: 'Todo Added Successfully!'\n            });\n         }, 1500);\n      }\n   }\n\n   render() {\n      return (\n         <Fragment>\n            {this.state.sectionReload &&\n               <RctSectionLoader />\n            }\n            <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={420} autoHide>\n               <List className=\"p-0\">\n                  {this.state.toDoListData && this.state.toDoListData.map((data, key) => (\n                     <ListItem className=\"border-bottom\" button key={key} onClick={() => this.handleChange(!data.completed, data)}>\n                        <div className={classnames('d-flex justify-content-between align-items-center w-100', { 'strike': data.completed })}>\n                           <div className=\"d-flex align-items-center clearfix\">\n                              <div className=\"float-left\">\n                                 <FormControlLabel\n                                    className=\"mb-0\"\n                                    control={\n                                       <Checkbox\n                                          checked={data.completed}\n                                          color=\"primary\"\n                                          onChange={(event) => this.handleChange(event.target.checked, data)}\n                                       />\n                                    }\n                                 />\n                              </div>\n                              <div className=\"float-left\">\n                                 <p className=\"mb-0\">{data.title}</p>\n                                 {data.date && <span className=\"d-block fs-12 text-muted\">{data.date}</span>}\n                              </div>\n                           </div>\n                           <div className=\"hover-action\">\n                              <Fab variant=\"round\" size=\"small\" className=\"btn-danger text-white\"\n                                 onClick={(e) => this.onDeleteTask(e, data)}>\n                                 <i className=\"zmdi zmdi-delete\"></i>\n                              </Fab>\n                           </div>\n                        </div>\n                     </ListItem>\n                  ))}\n               </List>\n            </Scrollbars>\n            <div className=\"d-flex p-3\">\n               <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => this.opnAddNewTodoDialog()}><IntlMessages id=\"widgets.addNew\" /></Button>\n            </div>\n            <Dialog\n               open={this.state.addNewTodoDialog}\n               onClose={this.handleClose}\n               aria-labelledby=\"form-dialog-title\">\n               <DialogTitle id=\"form-dialog-title\">\n                  <IntlMessages id=\"components.addNewTasks\" />\n               </DialogTitle>\n               <DialogContent>\n                  <DialogContentText>\n                     Add New Todo. Add Todo Title And Select Time For Todo.\n                        </DialogContentText>\n                  <TextField\n                     margin=\"dense\"\n                     id=\"name\"\n                     onChange={(e) => this.setState({ newTodo: { ...this.state.newTodo, todoTitle: e.target.value } })}\n                     label=\"Todo Title\"\n                     type=\"text\"\n                     fullWidth\n                     value={this.state.newTodo.todoTitle}\n                  />\n                  <TextField\n                     id=\"date\"\n                     label=\"Schedule Date\"\n                     type=\"date\"\n                     InputLabelProps={{\n                        shrink: true\n                     }}\n                     fullWidth\n                     onChange={(e) => this.setState({ newTodo: { ...this.state.newTodo, date: e.target.value } })}\n                  />\n               </DialogContent>\n               <DialogActions>\n                  <Button variant=\"contained\" onClick={this.handleClose} className=\"btn-danger text-white\">\n                     <span><IntlMessages id=\"button.cancel\" /></span>\n                  </Button>\n                  <Button variant=\"contained\" onClick={this.addNewTodo} color=\"primary\" className=\"text-white\">\n                     <span><IntlMessages id=\"button.add\" /></span>\n                  </Button>\n               </DialogActions>\n            </Dialog>\n            <Snackbar\n               anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n               }}\n               open={this.state.snackbar}\n               onClose={() => this.setState({ snackbar: false })}\n               autoHideDuration={2000}\n               snackbarcontentprops={{\n                  'aria-describedby': 'message-id',\n               }}\n               message={<span id=\"message-id\">{this.state.snackbarMessage}</span>}\n            />\n         </Fragment>\n      )\n   }\n}\n","/**\n * Rct Section Loader\n */\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst RctSectionLoader = () => (\n    <div className=\"d-flex justify-content-center loader-overlay\">\n        <CircularProgress />\n    </div>\n);\n\nexport default RctSectionLoader;\n"],"sourceRoot":""}