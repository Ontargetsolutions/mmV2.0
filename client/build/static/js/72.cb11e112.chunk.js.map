{"version":3,"sources":["components/Charts/DynamicLineChart.js","components/Widgets/BandWidthAreaChart.js","components/RctCard/RctCardHeading.js","components/RctCard/RctCard.js","components/RctCard/RctCardFooter.js","components/RctCard/RctCardContent.js","components/RctCard/index.js"],"names":["options","legend","display","scales","xAxes","yAxes","initialState","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","DynamicLineChart","this","setState","_this","timerFunction","setInterval","oldDataSet","state","newData","x","length","push","Math","floor","random","newDataSet","newState","clearInterval","height","Component","BandwidthAreaChart","RctCard","customClasses","className","IntlMessages","id","noPadding","RctCardHeading","title","children","heading","headingCustomClasses","colClasses","RctCardFooter","RctCardContent"],"mappings":"2LAOMA,EAAU,CACZC,OAAQ,CACJC,SAAS,GAEbC,OAAQ,CACJC,MAAO,CAAC,CACJF,SAAS,IAEbG,MAAO,CAAC,CACJH,SAAS,MAKfI,EAAe,CACjBC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACN,CACIC,MAAO,mBACPC,gBAAiB,wBACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,uBAClBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAKtBC,E,4LAGbC,KAAKC,SAASZ,GAEd,IAAIa,EAAQF,KAEZA,KAAKG,cAAgBC,aAAY,WAI7B,IAHA,IAAIC,EAAaH,EAAMI,MAAMf,SAAS,GAClCgB,EAAU,GAELC,EAAI,EAAGA,EAAIN,EAAMI,MAAMhB,OAAOmB,OAAQD,IAC3CD,EAAQG,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAGjC,IAAIC,EAAU,eACPT,GAGPS,EAAWhB,KAAOS,EAElB,IAAIQ,EAAQ,eACL1B,EADK,CAERE,SAAU,CAACuB,KAGfZ,EAAMD,SAASc,KAChB,Q,6CAIHC,cAAchB,KAAKG,iB,+BAInB,OACI,kBAAC,WAAD,KACKH,KAAKM,OACF,kBAAC,IAAD,CAAMR,KAAME,KAAKM,MAAOvB,QAASA,EAASkC,OAAQ,U,GAtCxBC,a,iBCV/BC,UAZY,kBACvB,kBAACC,EAAA,EAAD,CAASC,cAAc,oCACnB,yBAAKC,UAAU,QACX,4BAAI,kBAACC,EAAA,EAAD,CAAcC,GAAG,0BACrB,sCAEJ,kBAACJ,EAAA,EAAD,CAAgBK,WAAS,GACrB,kBAAC,EAAD,U,qDCdNC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAON,EAAV,EAAUA,cAAV,OACnB,yBAAKC,UAAS,0BAAqBD,GAAgC,KAC/D,4BAAKM,KCDPP,EAAU,SAAC,GAAD,IAAGQ,EAAH,EAAGA,SAAUP,EAAb,EAAaA,cAAeQ,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,qBAAsBC,EAA3D,EAA2DA,WAA3D,OACZ,yBAAKT,UAAWS,GAAcA,GAC1B,yBAAKT,UAAS,oBAAeD,GAAgC,KACxDQ,GACG,kBAAC,EAAD,CACIF,MAAOE,EACPR,cAAeS,IAGtBF,KCZPI,EAAgB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAUP,EAAb,EAAaA,cAAb,OAClB,yBAAKC,UAAS,2BAAsBD,GAAgC,KAC/DO,ICFHK,EAAiB,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUP,EAAb,EAAaA,cAAeI,EAA5B,EAA4BA,UAA5B,OACnB,yBAAKH,UAAS,UAAKG,EAAY,iBAAmB,oBAApC,YAA2DJ,GAAgC,KACpGO,ICPT","file":"static/js/72.cb11e112.chunk.js","sourcesContent":["/**\n * Dynamic Line Chart Component\n */\nimport React, { Component, Fragment } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// chart options\nconst options = {\n    legend: {\n        display: false\n    },\n    scales: {\n        xAxes: [{\n            display: false\n        }],\n        yAxes: [{\n            display: false\n        }]\n    }\n};\n\nconst initialState = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label: 'My First dataset',\n            backgroundColor: 'rgba(255,255,255,0.4)',\n            borderColor: 'rgba(255,255,255,1)',\n            borderWidth: 2,\n            hoverBackgroundColor: 'rgba(144,97,255,0.4)',\n            hoverBorderColor: 'rgba(144,97,255,0.4)',\n            data: [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nexport default class DynamicLineChart extends Component {\n\n    componentDidMount() {\n        this.setState(initialState);\n\n        var _this = this;\n\n        this.timerFunction = setInterval(function () {\n            var oldDataSet = _this.state.datasets[0];\n            var newData = [];\n\n            for (var x = 0; x < _this.state.labels.length; x++) {\n                newData.push(Math.floor(Math.random() * 100));\n            }\n\n            var newDataSet = {\n                ...oldDataSet\n            };\n\n            newDataSet.data = newData;\n\n            var newState = {\n                ...initialState,\n                datasets: [newDataSet]\n            };\n\n            _this.setState(newState);\n        }, 1500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerFunction);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.state &&\n                    <Line data={this.state} options={options} height={90} />\n                }\n            </Fragment>\n        );\n    }\n}\n","/**\n * BandWidth Area Chart Widget\n */\nimport React from 'react';\n\n// dynamic line chart\nimport DynamicLineChart from '../../components/Charts/DynamicLineChart';\n\n// intl messages\nimport IntlMessages from '../../util/IntlMessages';\n\n// rct card box\nimport { RctCard, RctCardContent } from '../../components/RctCard';\n\nconst BandwidthAreaChart = () => (\n    <RctCard customClasses=\"gradient-primary overflow-hidden\">\n        <div className=\"p-20\">\n            <h2><IntlMessages id=\"widgets.bandwidthUse\" /></h2>\n            <h2>50 GB</h2>\n        </div>\n        <RctCardContent noPadding>\n            <DynamicLineChart />\n        </RctCardContent>\n    </RctCard>\n);\n\nexport default BandwidthAreaChart;\n","/**\n * Rct Card Title\n */\n/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RctCardHeading = ({ title, customClasses }) => (\n    <div className={`rct-block-title ${customClasses ? customClasses : ''}`}>\n        <h4>{title}</h4>\n    </div>\n);\n\n// type checking props\nRctCardHeading.propTypes = {\n    title: PropTypes.any\n}\n\nexport { RctCardHeading };","/**\n * Rct Card\n */\nimport React from 'react';\n\n// rct card heading\nimport { RctCardHeading } from './RctCardHeading'\n\nconst RctCard = ({ children, customClasses, heading, headingCustomClasses, colClasses }) => (\n    <div className={colClasses && colClasses}>\n        <div className={`rct-block ${customClasses ? customClasses : ''}`}>\n            {heading &&\n                <RctCardHeading\n                    title={heading}\n                    customClasses={headingCustomClasses}\n                />\n            }\n            {children}\n        </div>\n    </div>\n);\n\nexport { RctCard };\n","/**\n * Rct Card Footer\n */\nimport React from 'react';\n\nconst RctCardFooter = ({ children, customClasses }) => (\n    <div className={`rct-block-footer ${customClasses ? customClasses : ''}`}>\n        {children}\n    </div>\n);\n\nexport { RctCardFooter };\n","/**\n * Rct Card Content\n */\nimport React from 'react';\n\nconst RctCardContent = ({ children, customClasses, noPadding }) => (\n    <div className={`${noPadding ? 'rct-full-block' : 'rct-block-content'} ${customClasses ? customClasses : ''}`}>\n        {children}\n    </div>\n);\n\nexport { RctCardContent };\n","/**\n * Rct Card\n */\nexport * from './RctCard';\nexport * from './RctCardFooter';\nexport * from './RctCardContent';\nexport * from './RctCardHeading';\n"],"sourceRoot":""}