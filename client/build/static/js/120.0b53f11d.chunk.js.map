{"version":3,"sources":["routes/session/forgot-password/index.js"],"names":["Forgotpwd","state","email","this","console","log","props","changePasswords","NotificationManager","error","type","duration","className","key","position","to","src","require","alt","width","height","AppConfig","brandName","name","value","id","placeholder","onChange","event","setState","target","variant","onClick","onChangePassword","component","Link","Component","connect","dispatch","CHANGE_PASSWORD"],"mappings":"kRAuBMA,E,2MACJC,MAAQ,CACNC,MAAO,I,kFAMY,IACZA,EAASC,KAAKF,MAAdC,MACPE,QAAQC,IAAR,kEAC0DH,IAE5C,KAAVA,EAEFC,KAAKG,MAAMC,gBAAiBJ,KAAKF,MAAMC,OAEvCM,sBAAoBC,MAAO,mC,+BAGpB,IAAD,OACFP,EAAQC,KAAKF,MAAMC,MACzB,OACE,kBAAC,IAAD,CAAWQ,KAAK,SAASC,SAAU,KACjC,yBAAKC,UAAU,sBAAsBC,IAAI,KACvC,kBAAC,IAAD,CAAQC,SAAS,SAASF,UAAU,kBAClC,kBAAC,IAAD,KACE,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMG,GAAG,KACP,yBACEC,IAAKC,EAAS,KACdC,IAAI,eACJN,UAAU,YACVO,MAAM,MACNC,OAAO,aASrB,yBAAKR,UAAU,0CACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,sBACb,gDAAsBS,IAAUC,WAChC,uBAAGV,UAAU,QAAb,sCAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWA,UAAU,eACnB,kBAAC,IAAD,CACEF,KAAK,OACLa,KAAK,YACLC,MAAOtB,EACPuB,GAAG,YACHb,UAAU,qBACVc,YAAY,sBACZC,SAAU,SAAAC,GAAK,OACb,EAAKC,SAAU,CAAC3B,MAAO0B,EAAME,OAAON,WAExC,0BAAMZ,UAAU,YACd,uBAAGA,UAAU,eAGjB,kBAAC,IAAD,KAEE,kBAAC,IAAD,CACEmB,QAAQ,YACRnB,UAAU,gDACVoB,QAAS,kBAAM,EAAKC,qBAHtB,mBAQF,kBAAC,IAAD,CACEC,UAAWC,IACXpB,GAAG,UACHH,UAAU,iDAHZ,6C,GA/EIwB,aA2HTC,sBAAS,MATG,SAAAC,GAAQ,MAAK,CAEtC/B,gBAAiB,SAACL,GAAD,OACfoC,EAAU,CACR5B,KAAM6B,IACNrC,MAAOA,QAIEmC,CAAoCrC","file":"static/js/120.0b53f11d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Form, FormGroup, Input} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {Link} from 'react-router-dom';\nimport QueueAnim from 'rc-queue-anim';\n\n// app config\nimport AppConfig from '../../../constants/AppConfig';\n\n// redux action\n// import {changePasswords}  from 'Actions';\n\nimport {\n\n  CHANGE_PASSWORD\n\n} from '../../../actions/types';\n\nimport {NotificationManager} from 'react-notifications';\n\nclass Forgotpwd extends Component {\n  state = {\n    email: '',\n  };\n\n  /**\n\t * On User Signup\n\t */\n  onChangePassword () {\n    const {email} = this.state;\n    console.log (\n      `email en el onclick del comp para cambiar contrase√±a ${email}`\n    );\n    if (email !== '') {\n      // changePasswords(email);\n      this.props.changePasswords (this.state.email);\n    } else {\n      NotificationManager.error ('You must fill the email field');\n    }\n  }\n  render () {\n    const email = this.state.email;\n    return (\n      <QueueAnim type=\"bottom\" duration={2000}>\n        <div className=\"rct-session-wrapper\" key=\"1\">\n          <AppBar position=\"static\" className=\"session-header\">\n            <Toolbar>\n              <div className=\"container\">\n                <div className=\"d-flex justify-content-between\">\n                  <div className=\"session-logo\">\n                    <Link to=\"/\">\n                      <img\n                        src={require ('../../../assets/img/site-logo.png')}\n                        alt=\"session-logo\"\n                        className=\"img-fluid\"\n                        width=\"110\"\n                        height=\"35\"\n                      />\n                    </Link>\n                  </div>\n\n                </div>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <div className=\"session-inner-wrapper p-4 h-100 p-md-0\">\n            <div className=\"row\">\n              <div className=\"col-sm-8 col-lg-5 mx-auto\">\n                <div className=\"session-body text-center\">\n                  <div className=\"session-head mb-30\">\n                    <h2>Get started with {AppConfig.brandName}</h2>\n                    <p className=\"mb-0\">Most powerful ReactJS admin panel</p>\n                  </div>\n                  <Form>\n                    <FormGroup className=\"has-wrapper\">\n                      <Input\n                        type=\"mail\"\n                        name=\"user-mail\"\n                        value={email}\n                        id=\"user-mail\"\n                        className=\"has-input input-lg\"\n                        placeholder=\"Enter Email Address\"\n                        onChange={event =>\n                          this.setState ({email: event.target.value})}\n                      />\n                      <span className=\"has-icon\">\n                        <i className=\"ti-email\" />\n                      </span>\n                    </FormGroup>\n                    <FormGroup>\n\n                      <Button\n                        variant=\"contained\"\n                        className=\"btn-info text-white btn-block btn-large w-100\"\n                        onClick={() => this.onChangePassword ()}\n                      >\n                        Reset Password\n                      </Button>\n                    </FormGroup>\n                    <Button\n                      component={Link}\n                      to=\"/signin\"\n                      className=\"btn-dark btn-block btn-large text-white w-100\"\n                    >\n                      Already having account?  Login\n                    </Button>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </QueueAnim>\n    );\n  }\n}\n\n// // map state to props\n// const mapStateToProps = ({authUser}) => {\n//   console.log (\n//     `hit the mapStateToProps authUser email: ${JSON.stringify (authUser)}`\n//   );\n//   // const email =  state.email;\n//   // return email;\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     changePasswords: email => {\n//       dispatch(changePasswords(email))\n//     }\n//   }\n// }\n\nconst mapDispatchToProps = dispatch => ({\n  // changePasswords: (email) => dispatch(changePasswords(email))\n  changePasswords: (email) =>\n    dispatch ({\n      type: CHANGE_PASSWORD,\n      email: email\n    }),\n});\n\nexport default connect (null, mapDispatchToProps) (Forgotpwd);\n// export default connect (mapStateToProps, changePasswords) (Forgotpwd);\n\n// export default Forgotpwd\n"],"sourceRoot":""}