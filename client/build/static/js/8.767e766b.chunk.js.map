{"version":3,"sources":["components/PageTitleBar/PageTitleBar.js","routes/crm/dashboard/index.js"],"names":["getUrlString","path","sub","index","split","PageTitleBar","title","match","enableBreadCrumb","substr","subPath","className","tag","map","active","length","Link","key","to","arr","id","charAt","slice","toUpperCase","getDisplayString","defaultProps","CrmDashboard","this","props","name","content","Component"],"mappings":"sGAAA,sDAuBMA,EAAe,SAACC,EAAMC,EAAKC,GAC9B,OAAc,IAAVA,EACM,IAEA,IAAMF,EAAKG,MAAMF,GAAK,GAAKA,GAIlCG,EAAe,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC7BP,EAAOM,EAAMN,KAAKQ,OAAO,GACzBC,EAAUT,EAAKG,MAAM,KAC3B,OACG,yBAAKO,UAAU,gEACXL,GACE,yBAAKK,UAAU,mBACZ,uBAAGA,UAAU,kBACb,wBAAIA,UAAU,IAAIL,IAGvBE,GACE,kBAAC,IAAD,CAAYG,UAAU,mBAAmBC,IAAI,OACzCF,EAAQG,KAAI,SAACX,EAAKC,GAChB,OAAO,kBAAC,IAAD,CAAgBW,OAAQJ,EAAQK,SAAWZ,EAAQ,EACvDS,IAAKF,EAAQK,SAAWZ,EAAQ,EAAI,OAASa,IAAMC,IAAKd,EACxDe,GAAIlB,EAAaC,EAAMC,EAAKC,IAnCxB,SAACD,GACvB,IAAMiB,EAAMjB,EAAIE,MAAM,KACtB,OAAIe,EAAIJ,OAAS,EACP,kBAAC,IAAD,CAAcK,GAAE,kBAAaD,EAAI,GAAGE,OAAO,GAAKF,EAAI,GAAGG,MAAM,GAAKH,EAAI,GAAGE,OAAO,GAAGE,cAAgBJ,EAAI,GAAGG,MAAM,MAEhH,kBAAC,IAAD,CAAcF,GAAE,kBAAalB,EAAImB,OAAO,GAAKnB,EAAIoB,MAAM,MA8BVE,CAAiBtB,UAU3EG,EAAaoB,aAAe,CACzBjB,kBAAkB,GAGNH,O,sKChDMqB,E,iLACR,IACCnB,EAAUoB,KAAKC,MAAfrB,MAER,OACG,yBAAKI,UAAU,0BACZ,kBAAC,SAAD,KACG,gDACA,0BAAMkB,KAAK,cAAcC,QAAQ,4BAEpC,kBAAC,IAAD,CAAcxB,MAAO,kBAAC,IAAD,CAAcc,GAAG,gBAAkBb,MAAOA,S,GAVjCwB","file":"static/js/8.767e766b.chunk.js","sourcesContent":["/**\n * Page Title Bar Component\n * Used To Display Page Title & Breadcrumbs\n */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n// intl messages\nimport IntlMessages from 'util/IntlMessages';\n\n// get display string\nconst getDisplayString = (sub) => {\n   const arr = sub.split(\"-\");\n   if (arr.length > 1) {\n      return <IntlMessages id={`sidebar.${arr[0].charAt(0) + arr[0].slice(1) + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)}`} />\n   } else {\n      return <IntlMessages id={`sidebar.${sub.charAt(0) + sub.slice(1)}`} />\n   }\n\n};\n\n// get url string\nconst getUrlString = (path, sub, index) => {\n   if (index === 0) {\n      return '/';\n   } else {\n      return '/' + path.split(sub)[0] + sub;\n   }\n};\n\nconst PageTitleBar = ({ title, match, enableBreadCrumb }) => {\n   const path = match.path.substr(1);\n   const subPath = path.split('/');\n   return (\n      <div className=\"page-title d-flex justify-content-between align-items-center\">\n         {title &&\n            <div className=\"page-title-wrap\">\n               <i className=\"ti-angle-left\"></i>\n               <h2 className=\"\">{title}</h2>\n            </div>\n         }\n         {enableBreadCrumb &&\n            <Breadcrumb className=\"mb-0 tour-step-7\" tag=\"nav\">\n               {subPath.map((sub, index) => {\n                  return <BreadcrumbItem active={subPath.length === index + 1}\n                     tag={subPath.length === index + 1 ? \"span\" : Link} key={index}\n                     to={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\n               }\n               )}\n            </Breadcrumb>\n         }\n      </div>\n   )\n};\n\n// default props value\nPageTitleBar.defaultProps = {\n   enableBreadCrumb: true\n}\n\nexport default PageTitleBar;\n","/**\n * Crm Dashboard\n */\n/* eslint-disable */\nimport React, { Component } from 'react'\nimport { Helmet } from \"react-helmet\";\n\n// intl messages\nimport IntlMessages from 'util/IntlMessages';\n\n// page title bar\nimport PageTitleBar from 'components/PageTitleBar/PageTitleBar';\n\nexport default class CrmDashboard extends Component {\n   render() {\n      const { match } = this.props;\n\n      return (\n         <div className=\"ecom-dashboard-wrapper\">\n            <Helmet>\n               <title>Crm Dashboard</title>\n               <meta name=\"description\" content=\"Reactify Crm Dashboard\" />\n            </Helmet>\n            <PageTitleBar title={<IntlMessages id=\"sidebar.crm\" />} match={match} />\n         </div>\n      )\n   }\n}\n"],"sourceRoot":""}