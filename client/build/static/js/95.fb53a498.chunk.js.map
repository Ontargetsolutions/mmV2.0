{"version":3,"sources":["components/Widgets/TrafficSources.js","constants/chart-config.js"],"names":["options","elements","point","radius","legend","display","labels","fontColor","ChartConfig","legendFontColor","scales","xAxes","gridLines","offsetGridLines","drawBorder","ticks","axesColor","yAxes","zeroLineColor","chartGridColor","stepSize","beginAtZero","padding","TrafficSourcesWidget","className","id","this","props","data","totalActiveUsers","canvas","ctx","getContext","_stroke","stroke","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","chartData","datasets","label","fill","tension","backgroundColor","color","info","borderColor","borderWidth","pointBorderWidth","hoverBackgroundColor","hoverBorderColor","height","Component","AppConfig","themeColors","primary","danger","success","warning","purple","secondary","yellow","white","greyLighten","grey"],"mappings":"qMAYMA,EAAU,CACZC,SAAU,CACNC,MAAO,CACHC,OAAQ,IAGhBC,OAAQ,CACJC,SAAS,EACTC,OAAQ,CACJC,UAAWC,IAAYC,kBAG/BC,OAAQ,CACJC,MAAO,CAAC,CACJC,UAAW,CACPC,iBAAiB,EACjBC,YAAY,GAEhBC,MAAO,CACHR,UAAWC,IAAYQ,UACvBX,SAAS,KAGjBY,MAAO,CAAC,CACJL,UAAW,CACPE,YAAY,EACZI,cAAeV,IAAYW,eAC3Bd,SAAS,GAEbU,MAAO,CACHR,UAAWC,IAAYQ,UACvBX,SAAS,EACTe,SAAU,GACVC,aAAa,EACbC,QAAS,QAMnBC,E,iLACQ,IAAD,OA+BL,OACI,yBAAKC,UAAU,oBACX,wBAAIA,UAAU,cAAa,kBAAC,IAAD,CAAcC,GAAG,4BAC5C,0BAAMD,UAAU,cAAcE,KAAKC,MAAMC,KAAKC,iBAA9C,IAAgE,kBAAC,IAAD,CAAcJ,GAAG,8BACjF,kBAAC,IAAD,CAAMG,KAlCD,SAACE,GACV,IAAMC,EAAMD,EAAOE,WAAW,MACxBC,EAAUF,EAAIG,OAUpB,OATAH,EAAIG,OAAS,WACTH,EAAII,OACJJ,EAAIK,YAAc5B,IAAY4B,YAC9BL,EAAIM,WAAa,GACjBN,EAAIO,cAAgB,EACpBP,EAAIQ,cAAgB,GACpBN,EAAQO,MAAMd,KAAMe,WACpBV,EAAIW,WAED,CACHpC,OAAQ,EAAKqB,MAAMC,KAAKe,UAAUrC,OAClCsC,SAAU,CACN,CACIC,MAAO,UACPC,MAAM,EACNC,QAAS,EACTC,gBAAiBxC,IAAYyC,MAAMC,KACnCC,YAAa3C,IAAYyC,MAAMC,KAC/BE,YAAa,EACbC,iBAAkB,EAClBC,qBAAsB9C,IAAYyC,MAAMC,KACxCK,iBAAkB/C,IAAYyC,MAAMC,KACpCtB,KAAM,EAAKD,MAAMC,KAAKe,UAAUf,SAStB5B,QAASA,EAASwD,OAAQ,W,GApCzBC,aA0CpBlC,a,iCC9Ff,I,EAAA,MAKyGmC,EAAUC,YAA3GC,E,EAAAA,QAASV,E,EAAAA,KAAMW,E,EAAAA,OAAQC,E,EAAAA,QAEzBtD,EAAc,CAClByC,MAAO,CACL,QAAWW,EACX,KAAQV,EACR,Q,EANoCa,QAOpC,OAAUF,EACV,QAAWC,EACX,QAAW,UACX,O,EAV6CE,OAW7C,U,EAXqDC,UAYrD,O,EAZgEC,OAahE,MAAS,UACT,K,EAdwEC,MAexE,Y,EAf+EC,YAgB/E,K,EAhB4FC,MAkB9F5D,gBAAiB,UACjBU,eAAgB,UAChBH,UAAW,UACXoB,YAAa,mBAkBA5B","file":"static/js/95.fb53a498.chunk.js","sourcesContent":["/**\n * Traffic Sources Widget\n */\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// intl messages\nimport IntlMessages from '../../util/IntlMessages';\n\n// chart config file\nimport ChartConfig from '../../constants/chart-config';\n\nconst options = {\n    elements: {\n        point: {\n            radius: 0\n        }\n    },\n    legend: {\n        display: false,\n        labels: {\n            fontColor: ChartConfig.legendFontColor\n        }\n    },\n    scales: {\n        xAxes: [{\n            gridLines: {\n                offsetGridLines: true,\n                drawBorder: false\n            },\n            ticks: {\n                fontColor: ChartConfig.axesColor,\n                display: false\n            }\n        }],\n        yAxes: [{\n            gridLines: {\n                drawBorder: false,\n                zeroLineColor: ChartConfig.chartGridColor,\n                display: false\n            },\n            ticks: {\n                fontColor: ChartConfig.axesColor,\n                display: false,\n                stepSize: 60,\n                beginAtZero: true,\n                padding: 40\n            }\n        }]\n    }\n};\n\nclass TrafficSourcesWidget extends Component {\n    render() {\n        const data = (canvas) => {\n            const ctx = canvas.getContext(\"2d\");\n            const _stroke = ctx.stroke;\n            ctx.stroke = function () {\n                ctx.save();\n                ctx.shadowColor = ChartConfig.shadowColor;\n                ctx.shadowBlur = 13;\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 12;\n                _stroke.apply(this, arguments);\n                ctx.restore();\n            };\n            return {\n                labels: this.props.data.chartData.labels,\n                datasets: [\n                    {\n                        label: 'Traffic',\n                        fill: false,\n                        tension: 0,\n                        backgroundColor: ChartConfig.color.info,\n                        borderColor: ChartConfig.color.info,\n                        borderWidth: 3,\n                        pointBorderWidth: 0,\n                        hoverBackgroundColor: ChartConfig.color.info,\n                        hoverBorderColor: ChartConfig.color.info,\n                        data: this.props.data.chartData.data\n                    }\n                ]\n            }\n        }\n        return (\n            <div className=\"card resource-mh\">\n                <h4 className=\"card-title\"><IntlMessages id=\"widgets.trafficSources\" /></h4>\n                <span className=\"fs-14 mb-4\">{this.props.data.totalActiveUsers} <IntlMessages id=\"widgets.totalActiveUsers\" /></span>\n                <Line data={data} options={options} height={110} />\n            </div>\n        );\n    }\n}\n\nexport default TrafficSourcesWidget;\n","/**\n* Change all chart colors\n*/\nimport AppConfig from './AppConfig';\n\nconst { primary, info, danger, success, warning, purple, secondary, yellow, white, greyLighten, grey } = AppConfig.themeColors;\n\nconst ChartConfig = {\n  color: {\n    'primary': primary,\n    'info': info,\n    'warning': warning,\n    'danger': danger,\n    'success': success,\n    'default': '#DEE4E8',\n    'purple': purple,\n    'secondary': secondary,\n    'yellow': yellow,\n    'white': '#FFFFFF',\n    'dark': white,\n    'greyLighten': greyLighten,\n    'grey': grey\n  },\n  legendFontColor: '#AAAEB3', // only works on react chart js 2\n  chartGridColor: '#EAEAEA',\n  axesColor: '#657786',\n  shadowColor: 'rgba(0,0,0,0.6)'\n}\n\n// Tooltip Styles\nexport const tooltipStyle = {\n  backgroundColor: 'rgba(0,0,0,0.6)',\n  border: '1px solid rgba(0,0,0,0.6)',\n  borderRadius: '5px'\n}\n\nexport const tooltipTextStyle = {\n  color: '#FFF',\n  fontSize: '12px',\n  paddingTop: '5px',\n  paddingBottom: '5px',\n  lineHeight: '1'\n}\n\nexport default ChartConfig;\n"],"sourceRoot":""}