{"version":3,"sources":["components/CountDown/CountDown.js","components/Widgets/NewOrderCountdown.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js"],"names":["CountDownTimer","props","state","time","seconds","timer","countDown","bind","secs","divisor_for_minutes","divisor_for_seconds","h","Math","floor","m","s","ceil","timeLeftVar","this","secondsToTime","setState","startTimer","setInterval","clearInterval","Component","NewOrderCountdown","Card","className","CardBody","IntlMessages","id","IconButton","aria-label","propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","cssModule","object","innerRef","oneOfType","func","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps"],"mappings":"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","file":"static/js/69.5ac0d127.chunk.js","sourcesContent":["/**\n * Countdown Timer\n */\nimport React, { Fragment, Component } from \"react\";\n\nexport default class CountDownTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { time: {}, seconds: props.time ? props.time : 3600 };\n        this.timer = 0;\n        this.countDown = this.countDown.bind(this);\n    }\n\n    secondsToTime(secs) {\n        let hours = Math.floor(secs / (60 * 60));\n\n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n\n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n\n        let obj = {\n            h: hours,\n            m: minutes,\n            s: seconds\n        };\n        return obj;\n    }\n\n    componentDidMount() {\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\n        this.setState({ time: timeLeftVar });\n        this.startTimer();\n    }\n\n    startTimer() {\n        if (this.timer === 0) {\n            this.timer = setInterval(this.countDown, 1000);\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    countDown() {\n        // Remove one second, set state so a re-render happens.\n        let seconds = this.state.seconds - 1;\n        this.setState({\n            time: this.secondsToTime(seconds),\n            seconds: seconds\n        });\n\n        // Check if we're at zero.\n        if (seconds == 0) {\n            clearInterval(this.timer);\n        }\n    }\n\n    render() {\n        const { m, s } = this.state.time;\n        return (\n            <Fragment>\n                {m} : {s < 10 ? `0${s}` : s}\n            </Fragment>\n        );\n    }\n}\n","/**\n * New Order Countdown Widget\n */\nimport React, { Component } from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport IconButton from '@material-ui/core/IconButton';\n\n// components\nimport CountDown from 'components/CountDown/CountDown';\n\n// intl messages\nimport IntlMessages from 'util/IntlMessages';\n\nexport default class NewOrderCountdown extends Component {\n    render() {\n        return (\n            <Card className=\"rct-block\">\n                <CardBody className=\"d-flex\">\n                    <div>\n                        <span className=\"d-flex justify-content-center align-items-center rounded-circle bg-warning p-15 mr-15\">\n                            <i className=\"zmdi zmdi-notifications-active zmdi-hc-lg text-white\"></i>\n                        </span>\n                    </div>\n                    <div>\n                        <p className=\"fs-14 fw-bold mb-5\">New order from John</p>\n                        <span className=\"fs-12 mb-20 d-block text-muted\"><IntlMessages id=\"widgets.AcceptorrRejectWithin\" /></span>\n                        <h1 className=\"border py-5 px-15 d-inline-block mr-20\"> <CountDown time={500000} /> </h1>\n                        <div className=\"d-inline-block\">\n                            <IconButton className=\"mr-10\" aria-label=\"check\">\n                                <i className=\"zmdi zmdi-check\"></i>\n                            </IconButton>\n                            <IconButton aria-label=\"close\">\n                                <i className=\"zmdi zmdi-close\"></i>\n                            </IconButton>\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n        );\n    }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}