{"version":3,"sources":["../node_modules/@material-ui/core/esm/Modal/ModalManager.js","../node_modules/@material-ui/core/esm/Modal/TrapFocus.js","../node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js","../node_modules/@material-ui/core/esm/Modal/Modal.js","../node_modules/@material-ui/core/esm/utils/ownerWindow.js","../node_modules/@material-ui/core/esm/utils/ownerDocument.js","../node_modules/@material-ui/core/esm/utils/getScrollbarSize.js"],"names":["ariaHidden","node","show","setAttribute","removeAttribute","getPaddingRight","parseInt","window","getComputedStyle","ariaHiddenSiblings","container","mountNode","currentNode","nodesToExclude","arguments","length","undefined","blacklist","concat","_toConsumableArray","blacklistTagNames","forEach","call","children","nodeType","indexOf","tagName","findIndexOf","containerInfo","callback","idx","some","item","index","handleContainer","props","fixedNodes","restoreStyle","restorePaddings","disableScrollLock","doc","ownerDocument","body","ownerWindow","innerWidth","documentElement","clientWidth","scrollHeight","clientHeight","isOverflowing","scrollbarSize","getScrollbarSize","push","value","style","paddingRight","key","el","querySelectorAll","parent","parentElement","scrollContainer","nodeName","overflow","i","removeProperty","_ref","setProperty","ModalManager","_classCallCheck","this","modals","containers","_createClass","modal","modalIndex","modalRef","hiddenSiblingNodes","hiddenSiblings","getAttribute","getHiddenSiblings","containerIndex","restore","splice","nextTop","TrapFocus","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","React","useRef","sentinelStart","sentinelEnd","nodeToRestore","rootRef","handleOwnRef","useCallback","instance","current","ReactDOM","findDOMNode","handleRef","useForkRef","ref","useMemo","activeElement","useEffect","contains","hasAttribute","focus","contain","loopFocus","event","keyCode","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","createElement","Fragment","tabIndex","cloneElement","styles","root","zIndex","position","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","invisible","SimpleBackdrop","forwardRef","_props$invisible","other","_objectWithoutProperties","_extends","defaultManager","Modal","inProps","theme","useTheme","getThemeProps","name","_props$BackdropCompon","BackdropComponent","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableScrollL","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","_React$useState","useState","exited","setExited","mountNodeRef","hasTransition","hasOwnProperty","getHasTransition","getModal","handleMounted","mount","scrollTop","handleOpen","useEventCallback","resolvedContainer","getContainer","add","isTopModal","handlePortalRef","handleClose","remove","inlineStyle","hidden","visibility","childProps","onEnter","createChainedFunction","onExited","Portal","onKeyDown","stopPropagation","role","onClick","target","currentTarget","defaultView","document","scrollDiv","width","height","appendChild","offsetWidth","removeChild"],"mappings":"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","file":"static/js/4.4f1aedce.chunk.js","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow'; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode) {\n  var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (node) {\n    if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  var idx = -1;\n  containerInfo.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var restorePaddings = [];\n  var container = containerInfo.container;\n  var fixedNodes;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      var scrollbarSize = getScrollbarSize();\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style['padding-right'] = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, function (node) {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = \"\".concat(getPaddingRight(node) + scrollbarSize, \"px\");\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    var parent = container.parentElement;\n    var scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  var restore = function restore() {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, function (node, i) {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          key = _ref.key;\n\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (node) {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager =\n/*#__PURE__*/\nfunction () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n\n    // this.modals[modalIndex] = modal\n    this.modals = []; // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblingNodes = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblingNodes: hiddenSiblingNodes\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };","/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\n * @ignore - internal component.\n */\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open || typeof window === 'undefined') {\n      return;\n    }\n\n    nodeToRestore.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var contain = function contain() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      contain();\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n/*\n\nIn the future, we should be able to replace TrapFocus with:\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\n\n```jsx\nimport FocusScope from 'react-dom/FocusScope';\n\nfunction TrapFocus(props) {\n  const {\n    children\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    open,\n  } = props;\n\n  if (!open) {\n    return children;\n  }\n\n  return (\n    <FocusScope\n      autoFocus={!disableAutoFocus}\n      contain={!disableEnforceFocus}\n      restoreFocus={!disableRestoreFocus}\n    >\n      {children}\n    </FocusScope>\n  );\n}\n```\n\n*/\n\nexport default TrapFocus;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SimpleBackdrop = React.forwardRef(function SimpleBackdrop(props, ref) {\n  var _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"invisible\", \"open\"]);\n\n  return open ? React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, {}, invisible ? styles.invisible : {}, {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from './TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    } // Swallow the event, in case someone is listening for the escape key on the body.\n\n\n    event.stopPropagation();\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown && onClose) {\n      onClose(event, 'escapeKeyDown');\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, {}, !open && exited ? inlineStyle.hidden : {}, {}, other.style)\n  }), hideBackdrop ? null : React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire any callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire any callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","import ownerDocument from './ownerDocument';\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","// A change of the browser zoom change the scrollbar size.\n// Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519\nexport default function getScrollbarSize() {\n  var scrollDiv = document.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarSize;\n}"],"sourceRoot":""}