{"version":3,"sources":["components/Widgets/Weather.js"],"names":["WeatherWidget","props","state","city","countryCode","todayTemp","todayTempText","todayWeatherIcon","currentTime","moment","format","axios","get","then","response","id","setState","data","name","country","list","temp","max","weather","main","todayDayName","catch","error","console","log","className","classNames","this","Component"],"mappings":"4QA+BqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,eAAe,EACfC,iBAAkB,GAClBC,YAAaC,MAASC,OAAO,YARlB,E,iFAWE,IAAD,OAIhBC,IAAMC,IAAI,gLACLC,MAAK,SAAAC,GA1ClB,IAAiBC,EA2CD,EAAKC,SAAS,CACVb,KAAMW,EAASG,KAAKd,KAAKe,KACzBd,YAAaU,EAASG,KAAKd,KAAKgB,QAChCd,UAAWS,EAASG,KAAKG,KAAK,GAAGC,KAAKC,IACtChB,cAAeQ,EAASG,KAAKG,KAAK,GAAGG,QAAQ,GAAGC,KAChDC,aAAchB,MAASC,OAAO,QAC9BH,kBAjDHQ,EAiD6BD,EAASG,KAAKG,KAAK,GAAGG,QAAQ,GAAGR,GAhDvEA,GAAM,KAAOA,EAAK,IACX,sBACAA,GAAM,KAAOA,EAAK,IAClB,eACAA,GAAM,KAAOA,EAAK,IAClB,sBACAA,GAAM,KAAOA,EAAK,IAClB,iBACAA,GAAM,KAAOA,EAAK,IAClB,gBACO,MAAPA,EACA,kBACAA,GAAM,KAAOA,EAAK,IAClB,4BACAA,GAAM,KAAOA,EAAK,IAClB,mBACO,MAAPA,GAAeA,GAAM,KAAOA,GAAM,IAClC,kBACAA,GAAM,KAAOA,EAAK,IAClB,2BADJ,QAiCEW,OAAM,SAAAC,GACHC,QAAQC,IAAI,kCAAmCF,Q,+BAIvD,OACI,yBAAKG,UAAU,sDACX,yBAAKA,UAAU,uEACX,yBAAKA,UAAU,gCACX,uBAAGA,UAAWC,IAAWC,KAAK9B,MAAMK,iBAAkB,mBACtD,yBAAKuB,UAAU,mBACX,wBAAIA,UAAU,QAAQE,KAAK9B,MAAMC,KAAjC,KAAyC6B,KAAK9B,MAAME,YAApD,KACA,wBAAI0B,UAAU,gBAAgBE,KAAK9B,MAAMuB,aAAzC,IAAwDO,KAAK9B,MAAMM,aACnE,4BAAKwB,KAAK9B,MAAMG,UAAhB,IAA4B2B,KAAK9B,MAAMI,uB,GAxCxB2B","file":"static/js/114.312dc15c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport classNames from 'classnames';\n\n// function to get today weather icon\nfunction getIcon(id) {\n    if (id >= 200 && id < 300) {\n        return 'wi wi-night-showers'\n    } else if (id >= 300 && id < 500) {\n        return 'wi day-sleet'\n    } else if (id >= 500 && id < 600) {\n        return 'wi wi-night-showers'\n    } else if (id >= 600 && id < 700) {\n        return 'wi wi-day-snow'\n    } else if (id >= 700 && id < 800) {\n        return 'wi wi-day-fog'\n    } else if (id === 800) {\n        return 'wi wi-day-sunny'\n    } else if (id >= 801 && id < 803) {\n        return 'wi wi-night-partly-cloudy'\n    } else if (id >= 802 && id < 900) {\n        return 'wi wi-day-cloudy'\n    } else if (id === 905 || (id >= 951 && id <= 956)) {\n        return 'wi wi-day-windy'\n    } else if (id >= 900 && id < 1000) {\n        return 'wi wi-night-showers'\n    }\n}\n\n// Main component\nexport default class WeatherWidget extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            city: false,\n            countryCode: false,\n            todayTemp: false,\n            todayTempText: false,\n            todayWeatherIcon: '',\n            currentTime: moment().format('hh:mm A')\n        }\n    }\n    componentDidMount() {\n        var appid = 'b1b15e88fa797225412429c1c50c122a1'; // Your api id\n        var apikey = '69b72ed255ce5efad910bd946685883a'; //Your apikey\n        var city = 'Mohali'; // city name\n        axios.get('https://api.openweathermap.org/data/2.5/forecast/daily?q=' + city + '&cnt=6&units=metric&mode=json&appid=' + appid + '&apikey=' + apikey)\n            .then(response => {\n                this.setState({\n                    city: response.data.city.name,\n                    countryCode: response.data.city.country,\n                    todayTemp: response.data.list[0].temp.max,\n                    todayTempText: response.data.list[0].weather[0].main,\n                    todayDayName: moment().format('dddd'),\n                    todayWeatherIcon: getIcon(response.data.list[0].weather[0].id)\n                })\n            })\n            .catch(error => {\n                console.log('Error fetching and parsing data', error);\n            });\n    }\n    render() {\n        return (\n            <div className=\"card rct-weather-widget text-white text-center p-0\">\n                <div className=\"black-overlay p-20 align-items-center d-flex justify-content-center\">\n                    <div className=\"d-flex justify-content-start\">\n                        <i className={classNames(this.state.todayWeatherIcon, 'font-4x mr-20')}></i>\n                        <div className=\"weather-content\">\n                            <h3 className=\"mb-5\">{this.state.city} ({this.state.countryCode})</h3>\n                            <h4 className=\"mb-5 dayTime\">{this.state.todayDayName} {this.state.currentTime}</h4>\n                            <h2>{this.state.todayTemp} {this.state.todayTempText}</h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}