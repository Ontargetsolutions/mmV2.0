{"version":3,"sources":["components/Charts/HorizontalBarChart.js","components/Widgets/TrafficChannel.js","components/RctCard/RctCardHeading.js","components/RctCard/RctCard.js","components/RctCard/RctCardFooter.js","components/RctCard/RctCardContent.js","components/RctCard/index.js","constants/chart-config.js"],"names":["HorizontalBarChart","this","props","labels","label","chartdata","height","options","legend","display","scales","xAxes","gridLines","color","ChartConfig","chartGridColor","drawBorder","ticks","fontColor","axesColor","min","max","yAxes","data","datasets","backgroundColor","info","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Component","TrafficChannel","className","RctCard","customClasses","Button","size","variant","IntlMessages","id","RctCardHeading","title","children","heading","headingCustomClasses","colClasses","RctCardFooter","RctCardContent","noPadding","AppConfig","themeColors","primary","danger","success","warning","purple","secondary","yellow","white","greyLighten","grey","legendFontColor","shadowColor"],"mappings":"+MASqBA,E,iLACR,IAAD,EACuCC,KAAKC,MAA1CC,EADF,EACEA,OAAQC,EADV,EACUA,MAAOC,EADjB,EACiBA,UAAWC,EAD5B,EAC4BA,OAkB5BC,EAAU,CACbC,OAAQ,CACLC,SAAS,GAEZC,OAAQ,CACLC,MAAO,CAAC,CACLC,UAAW,CACRC,MAAOC,IAAYC,eACnBC,YAAY,GAEfC,MAAO,CACJC,UAAWJ,IAAYK,UACvBC,IAAK,EACLC,IAAK,KAGXC,MAAO,CAAC,CACLV,UAAW,CACRH,SAAS,GAEZQ,MAAO,CACJC,UAAWJ,IAAYK,eAMnC,OACG,kBAAC,IAAD,CAAeI,KA7CL,WACV,MAAO,CACJpB,OAAQA,EACRqB,SAAU,CACP,CACGpB,MAAOA,EACPqB,gBAAiBX,IAAYD,MAAMa,KACnCC,YAAab,IAAYD,MAAMa,KAC/BE,YAAa,EACbC,qBAAsBf,IAAYD,MAAMa,KACxCI,iBAAkBhB,IAAYD,MAAMa,KACpCH,KAAMlB,MAkCYE,QAASA,EAASD,OAAQA,Q,GAhDdyB,a,QC0BjCC,UApBQ,SAAC,GAAD,IAAG5B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWF,EAArB,EAAqBA,OAArB,OACpB,yBAAK8B,UAAU,oBACZ,yBAAKA,UAAU,QACZ,kBAAC,EAAD,CACG7B,MAAOA,EACPC,UAAWA,EACXF,OAAQA,EACRG,OAAQ,OAGd,kBAAC4B,EAAA,EAAD,CAAeC,cAAc,qDAC1B,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,YAAYzB,MAAM,UAAUoB,UAAU,cAAnE,IAAiF,kBAACM,EAAA,EAAD,CAAcC,GAAG,yBAClG,uBAAGP,UAAU,wBACV,8BAAM,uBAAGA,UAAU,4BACnB,kBAACM,EAAA,EAAD,CAAcC,GAAG,iC,qDCtBvBC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOP,EAAV,EAAUA,cAAV,OACnB,yBAAKF,UAAS,0BAAqBE,GAAgC,KAC/D,4BAAKO,KCDPR,EAAU,SAAC,GAAD,IAAGS,EAAH,EAAGA,SAAUR,EAAb,EAAaA,cAAeS,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,qBAAsBC,EAA3D,EAA2DA,WAA3D,OACZ,yBAAKb,UAAWa,GAAcA,GAC1B,yBAAKb,UAAS,oBAAeE,GAAgC,KACxDS,GACG,kBAAC,EAAD,CACIF,MAAOE,EACPT,cAAeU,IAGtBF,KCZPI,EAAgB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAUR,EAAb,EAAaA,cAAb,OAClB,yBAAKF,UAAS,2BAAsBE,GAAgC,KAC/DQ,ICFHK,EAAiB,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUR,EAAb,EAAaA,cAAec,EAA5B,EAA4BA,UAA5B,OACnB,yBAAKhB,UAAS,UAAKgB,EAAY,iBAAmB,oBAApC,YAA2Dd,GAAgC,KACpGQ,ICPT,uG,iCCAA,I,EAAA,MAKyGO,EAAUC,YAA3GC,E,EAAAA,QAAS1B,E,EAAAA,KAAM2B,E,EAAAA,OAAQC,E,EAAAA,QAEzBxC,EAAc,CAClBD,MAAO,CACL,QAAWuC,EACX,KAAQ1B,EACR,Q,EANoC6B,QAOpC,OAAUF,EACV,QAAWC,EACX,QAAW,UACX,O,EAV6CE,OAW7C,U,EAXqDC,UAYrD,O,EAZgEC,OAahE,MAAS,UACT,K,EAdwEC,MAexE,Y,EAf+EC,YAgB/E,K,EAhB4FC,MAkB9FC,gBAAiB,UACjB/C,eAAgB,UAChBI,UAAW,UACX4C,YAAa,mBAkBAjD","file":"static/js/63.f80172e1.chunk.js","sourcesContent":["/**\n * Horizontal Bar Chart\n */\n\nimport React, { Component } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport ChartConfig from '../../constants/chart-config';\n\n// Main Component\nexport default class HorizontalBarChart extends Component {\n   render() {\n      const { labels, label, chartdata, height } = this.props;\n      const data = () => {\n         return {\n            labels: labels,\n            datasets: [\n               {\n                  label: label,\n                  backgroundColor: ChartConfig.color.info,\n                  borderColor: ChartConfig.color.info,\n                  borderWidth: 1,\n                  hoverBackgroundColor: ChartConfig.color.info,\n                  hoverBorderColor: ChartConfig.color.info,\n                  data: chartdata,\n               }\n            ]\n         }\n      }\n      // chart options\n      const options = {\n         legend: {\n            display: false\n         },\n         scales: {\n            xAxes: [{\n               gridLines: {\n                  color: ChartConfig.chartGridColor,\n                  drawBorder: false\n               },\n               ticks: {\n                  fontColor: ChartConfig.axesColor,\n                  min: 1,\n                  max: 9\n               },\n            }],\n            yAxes: [{\n               gridLines: {\n                  display: false\n               },\n               ticks: {\n                  fontColor: ChartConfig.axesColor\n               },\n            }]\n         }\n      };\n\n      return (\n         <HorizontalBar data={data} options={options} height={height} />\n      );\n   }\n}\n","/**\n * Traffic Sales Widget\n */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\n\n// card component\nimport { RctCardFooter } from '../../components/RctCard';\n\n// chart\nimport HorizontalBarChart from '../../components/Charts/HorizontalBarChart';\n\n// intl messages\nimport IntlMessages from '../../util/IntlMessages';\n\nconst TrafficChannel = ({ label, chartdata, labels }) => (\n   <div className=\"sales-chart-wrap\">\n      <div className=\"p-15\">\n         <HorizontalBarChart\n            label={label}\n            chartdata={chartdata}\n            labels={labels}\n            height={168}\n         />\n      </div>\n      <RctCardFooter customClasses=\"d-flex justify-content-between align-items-center\">\n         <Button size=\"small\" variant=\"contained\" color=\"primary\" className=\"text-white\"> <IntlMessages id=\"button.goToCampaign\" /></Button>\n         <p className=\"fs-12 mb-0 text-base\">\n            <span><i className=\"mr-5 zmdi zmdi-refresh\"></i></span>\n            <IntlMessages id=\"widgets.updated10Minago\" />\n         </p>\n      </RctCardFooter >\n   </div >\n);\n\nexport default TrafficChannel;\n","/**\n * Rct Card Title\n */\n/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RctCardHeading = ({ title, customClasses }) => (\n    <div className={`rct-block-title ${customClasses ? customClasses : ''}`}>\n        <h4>{title}</h4>\n    </div>\n);\n\n// type checking props\nRctCardHeading.propTypes = {\n    title: PropTypes.any\n}\n\nexport { RctCardHeading };","/**\n * Rct Card\n */\nimport React from 'react';\n\n// rct card heading\nimport { RctCardHeading } from './RctCardHeading'\n\nconst RctCard = ({ children, customClasses, heading, headingCustomClasses, colClasses }) => (\n    <div className={colClasses && colClasses}>\n        <div className={`rct-block ${customClasses ? customClasses : ''}`}>\n            {heading &&\n                <RctCardHeading\n                    title={heading}\n                    customClasses={headingCustomClasses}\n                />\n            }\n            {children}\n        </div>\n    </div>\n);\n\nexport { RctCard };\n","/**\n * Rct Card Footer\n */\nimport React from 'react';\n\nconst RctCardFooter = ({ children, customClasses }) => (\n    <div className={`rct-block-footer ${customClasses ? customClasses : ''}`}>\n        {children}\n    </div>\n);\n\nexport { RctCardFooter };\n","/**\n * Rct Card Content\n */\nimport React from 'react';\n\nconst RctCardContent = ({ children, customClasses, noPadding }) => (\n    <div className={`${noPadding ? 'rct-full-block' : 'rct-block-content'} ${customClasses ? customClasses : ''}`}>\n        {children}\n    </div>\n);\n\nexport { RctCardContent };\n","/**\n * Rct Card\n */\nexport * from './RctCard';\nexport * from './RctCardFooter';\nexport * from './RctCardContent';\nexport * from './RctCardHeading';\n","/**\n* Change all chart colors\n*/\nimport AppConfig from './AppConfig';\n\nconst { primary, info, danger, success, warning, purple, secondary, yellow, white, greyLighten, grey } = AppConfig.themeColors;\n\nconst ChartConfig = {\n  color: {\n    'primary': primary,\n    'info': info,\n    'warning': warning,\n    'danger': danger,\n    'success': success,\n    'default': '#DEE4E8',\n    'purple': purple,\n    'secondary': secondary,\n    'yellow': yellow,\n    'white': '#FFFFFF',\n    'dark': white,\n    'greyLighten': greyLighten,\n    'grey': grey\n  },\n  legendFontColor: '#AAAEB3', // only works on react chart js 2\n  chartGridColor: '#EAEAEA',\n  axesColor: '#657786',\n  shadowColor: 'rgba(0,0,0,0.6)'\n}\n\n// Tooltip Styles\nexport const tooltipStyle = {\n  backgroundColor: 'rgba(0,0,0,0.6)',\n  border: '1px solid rgba(0,0,0,0.6)',\n  borderRadius: '5px'\n}\n\nexport const tooltipTextStyle = {\n  color: '#FFF',\n  fontSize: '12px',\n  paddingTop: '5px',\n  paddingBottom: '5px',\n  lineHeight: '1'\n}\n\nexport default ChartConfig;\n"],"sourceRoot":""}