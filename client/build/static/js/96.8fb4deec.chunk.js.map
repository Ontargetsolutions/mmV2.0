{"version":3,"sources":["components/Widgets/UserProfile.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js"],"names":["UserProfile","className","alt","src","require","href","variant","color","id","Component","createSvgIcon","React","createElement","d","Avatar","forwardRef","props","ref","childrenProp","children","classes","_props$component","component","imgProps","sizes","srcSet","_props$variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","useState","setLoaded","useEffect","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name"],"mappings":"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","file":"static/js/96.8fb4deec.chunk.js","sourcesContent":["/**\n * User Profile\n */\nimport React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\n// intl messages\nimport IntlMessages from '../../util/IntlMessages';\n\nexport default class UserProfile extends Component {\n   render() {\n      return (\n         <div className=\"user-profile-widget\">\n            <div className=\"bg-primary py-70\"></div>\n            <div className=\"p-20\">\n               <div className=\"d-flex user-avatar\">\n                  <Avatar\n                     alt=\"user 2\"\n                     src={require('../../assets/avatars/user-2.jpg')}\n                     className=\"size-100 rounded-circle mr-15\"\n                  />\n                  <div className=\"user-info text-white pt-20\">\n                     <h4 className=\"mb-0\">Phoebe Henderson</h4>\n                     <span>CEO</span>\n                  </div>\n               </div>\n               <ul className=\"list-unstyled my-25\">\n                  <li className=\"border-bottom py-10 d-flex align-items-center\">\n                     <i className=\"zmdi zmdi-email mr-10 fs-14\"></i>\n                     <a href=\"mail-to:phoebe@gmail.com\" className=\"fs-14 text-dark\">phoebe@gmail.com</a>\n                  </li>\n                  <li className=\"border-bottom py-10 d-flex align-items-center\">\n                     <i className=\"zmdi zmdi-phone mr-10 fs-14\"></i>\n                     <a href=\"tel:011234567890\" className=\"fs-14 text-dark\">+01 123 456 7890</a>\n                  </li>\n                  <li className=\"border-bottom py-10 fs-14 d-flex align-items-center\">\n                     <i className=\"zmdi zmdi-account-box mr-10 fs-14\"></i>\n                     e-51, Industrial area, Phase2, Mohali\n                  </li>\n               </ul>\n               <div className=\"d-flex\">\n                  <Button\n                     variant=\"contained\"\n                     color=\"primary\"\n                     className=\"text-white mr-10 mb-10 btn-xs\"\n                  >\n                     <IntlMessages id=\"button.viewProfile\" />\n                  </Button>\n                  <Button\n                     variant=\"contained\"\n                     color=\"secondary\"\n                     className=\"text-white btn-xs mb-10\"\n                  >\n                     <IntlMessages id=\"button.sendMessage\" />\n                  </Button>\n               </div>\n            </div>\n         </div>\n      )\n   }\n};\n\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);"],"sourceRoot":""}