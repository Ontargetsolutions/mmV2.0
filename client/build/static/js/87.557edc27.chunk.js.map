{"version":3,"sources":["components/Charts/StackedLineChart.js","components/Widgets/NewslaterCampaign.js","constants/chart-config.js"],"names":["options","legend","display","scales","xAxes","yAxes","gridLines","StackedLineChart","darkMode","this","props","data","canvas","ctx","getContext","gradientFill1","createLinearGradient","gradientFill2","addColorStop","hexToRgbA","ChartConfig","color","info","primary","labels","datasets","label","lineTension","backgroundColor","borderColor","borderWidth","pointBorderWidth","pointRadius","height","Component","connect","settings","NewslaterCampaign","AppConfig","themeColors","danger","success","warning","purple","secondary","yellow","white","greyLighten","grey","legendFontColor","chartGridColor","axesColor","shadowColor"],"mappings":"8MAUMA,EAAU,CACbC,OAAQ,CACLC,SAAS,GAEZC,OAAQ,CACLC,MAAO,CAAC,CACLF,SAAS,IAEZG,MAAO,CAAC,CACLH,SAAS,EACTI,UAAW,CACRJ,SAAS,OAOfK,E,iLACO,IACCC,EAAaC,KAAKC,MAAlBF,SAoCR,OACG,kBAAC,IAAD,CAAMG,KApCI,SAACC,GACX,IAAMC,EAAMD,EAAOE,WAAW,MAC1BC,EAAgBF,EAAIG,qBAAqB,EAAG,EAAG,EAAG,KAClDC,EAAgBJ,EAAIG,qBAAqB,EAAG,EAAG,EAAG,KAMtD,OALAD,EAAcG,aAAa,EAAGC,YAAUC,IAAYC,MAAMC,KAAM,IAChEP,EAAcG,aAAa,EAAGV,EAAW,UAAY,WACrDS,EAAcC,aAAa,EAAGC,YAAUC,IAAYC,MAAME,QAAS,IACnEN,EAAcC,aAAa,EAAGV,EAAW,UAAY,WAE9C,CACJgB,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFC,SAAU,CACP,CACGC,MAAO,aACPC,YAAa,EACbC,gBAAiBb,EACjBc,YAAaT,IAAYC,MAAMC,KAC/BQ,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbrB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEzD,CACGe,MAAO,aACPC,YAAa,EACbC,gBAAiBX,EACjBY,YAAaT,IAAYC,MAAME,QAC/BO,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbrB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAM9CX,QAASA,EAASiC,OAAQ,U,GAvCtBC,aAiDhBC,eALS,SAAC,GAEtB,MAAO,CAAE3B,SAF8B,EAAf4B,SAChB5B,YAII2B,CAAyB5B,G,4CCvEnB8B,E,iLAEf,OACG,kBAAC,WAAD,KACG,kBAAC,EAAD,W,GAJmCH,c,iCCN/C,I,EAAA,MAKyGI,EAAUC,YAA3GhB,E,EAAAA,QAASD,E,EAAAA,KAAMkB,E,EAAAA,OAAQC,E,EAAAA,QAEzBrB,EAAc,CAClBC,MAAO,CACL,QAAWE,EACX,KAAQD,EACR,Q,EANoCoB,QAOpC,OAAUF,EACV,QAAWC,EACX,QAAW,UACX,O,EAV6CE,OAW7C,U,EAXqDC,UAYrD,O,EAZgEC,OAahE,MAAS,UACT,K,EAdwEC,MAexE,Y,EAf+EC,YAgB/E,K,EAhB4FC,MAkB9FC,gBAAiB,UACjBC,eAAgB,UAChBC,UAAW,UACXC,YAAa,mBAkBAhC","file":"static/js/87.557edc27.chunk.js","sourcesContent":["/**\n * Stacked Line Chart\n */\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { connect } from \"react-redux\";\nimport ChartConfig from \"../../constants/chart-config\";\nimport { hexToRgbA } from \"../../helpers/helpers\";\n\n// chart options\nconst options = {\n   legend: {\n      display: true\n   },\n   scales: {\n      xAxes: [{\n         display: true,\n      }],\n      yAxes: [{\n         display: true,\n         gridLines: {\n            display: false\n         }\n      }]\n   }\n};\n\n// Main Component\nclass StackedLineChart extends Component {\n   render() {\n      const { darkMode } = this.props;\n      const data = (canvas) => {\n         const ctx = canvas.getContext(\"2d\");\n         var gradientFill1 = ctx.createLinearGradient(0, 0, 0, 350);\n         var gradientFill2 = ctx.createLinearGradient(0, 0, 0, 325);\n         gradientFill1.addColorStop(0, hexToRgbA(ChartConfig.color.info, 1));\n         gradientFill1.addColorStop(1, darkMode ? \"#2c3644\" : \"#FFFFFF\");\n         gradientFill2.addColorStop(0, hexToRgbA(ChartConfig.color.primary, 1));\n         gradientFill2.addColorStop(1, darkMode ? \"#000000\" : \"#FFFFFF\");\n\n         return {\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n            datasets: [\n               {\n                  label: 'Campaign 1',\n                  lineTension: 0,\n                  backgroundColor: gradientFill1,\n                  borderColor: ChartConfig.color.info,\n                  borderWidth: 3,\n                  pointBorderWidth: 0,\n                  pointRadius: 0,\n                  data: [50, 45, 22, 18, 25, 5, 35, 20, 45, 22, 30, 70, 40]\n               },\n               {\n                  label: 'Campaign 2',\n                  lineTension: 0,\n                  backgroundColor: gradientFill2,\n                  borderColor: ChartConfig.color.primary,\n                  borderWidth: 3,\n                  pointBorderWidth: 0,\n                  pointRadius: 0,\n                  data: [40, 30, 60, 30, 35, 50, 10, 30, 25, 28, 55, 65, 80]\n               }\n            ]\n         }\n      }\n      return (\n         <Line data={data} options={options} height={200} />\n      );\n   }\n}\n\nconst mapStateToProps = ({ settings }) => {\n   const { darkMode } = settings;\n   return { darkMode };\n}\n\nexport default connect(mapStateToProps)(StackedLineChart);\n","//Newslater widget\nimport React, { Component, Fragment } from 'react'\n\n// chart\nimport StackedLineChart from '../../components/Charts/StackedLineChart';\n\nexport default class NewslaterCampaign extends Component {\n   render() {\n      return (\n         <Fragment>\n            <StackedLineChart />\n         </Fragment>\n      )\n   }\n}\n","/**\n* Change all chart colors\n*/\nimport AppConfig from './AppConfig';\n\nconst { primary, info, danger, success, warning, purple, secondary, yellow, white, greyLighten, grey } = AppConfig.themeColors;\n\nconst ChartConfig = {\n  color: {\n    'primary': primary,\n    'info': info,\n    'warning': warning,\n    'danger': danger,\n    'success': success,\n    'default': '#DEE4E8',\n    'purple': purple,\n    'secondary': secondary,\n    'yellow': yellow,\n    'white': '#FFFFFF',\n    'dark': white,\n    'greyLighten': greyLighten,\n    'grey': grey\n  },\n  legendFontColor: '#AAAEB3', // only works on react chart js 2\n  chartGridColor: '#EAEAEA',\n  axesColor: '#657786',\n  shadowColor: 'rgba(0,0,0,0.6)'\n}\n\n// Tooltip Styles\nexport const tooltipStyle = {\n  backgroundColor: 'rgba(0,0,0,0.6)',\n  border: '1px solid rgba(0,0,0,0.6)',\n  borderRadius: '5px'\n}\n\nexport const tooltipTextStyle = {\n  color: '#FFF',\n  fontSize: '12px',\n  paddingTop: '5px',\n  paddingBottom: '5px',\n  lineHeight: '1'\n}\n\nexport default ChartConfig;\n"],"sourceRoot":""}