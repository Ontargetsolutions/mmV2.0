{"version":3,"sources":["components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","components/Widgets/NewCustomers.js","components/RctSectionLoader/RctSectionLoader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js"],"names":["DeleteConfirmationDialog","state","open","this","setState","props","title","message","onConfirm","Dialog","onClose","close","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","className","autoFocus","Component","NewCustomers","sectionReload","newCustomers","selectedDeletedCustomer","editCustomerModal","editCustomer","snackbar","successMessage","addNewCustomerForm","addNewCustomerDetails","customer_email","customer_name","photo_url","toggleEditCustomerModal","getNewCustomers","api","get","then","response","data","catch","error","customer","refs","deleteConfirmationDialog","index","indexOf","setTimeout","splice","indexOfCustomer","i","length","customer_id","self","update","$set","key","value","newCustomer","Date","getTime","push","RctSectionLoader","autoHeight","autoHeightMin","autoHeightMax","autoHide","map","Avatar","charAt","src","alt","width","height","type","onEditCustomer","onDeleteCustomer","variant","color","addNewCustomer","IntlMessages","ref","deleteCustomer","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","name","onChange","e","onChangeCustomerAddNewForm","target","defaultValue","readOnly","onChangeCustomerDetails","ModalFooter","onSubmitAddNewCustomerForm","onSubmitCustomerEditDetailForm","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","createSvgIcon","React","createElement","d","forwardRef","childrenProp","children","classes","_props$component","component","imgProps","sizes","srcSet","_props$variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","useState","setLoaded","useEffect","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","default","backgroundColor","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent"],"mappings":"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","file":"static/js/66.1514771d.chunk.js","sourcesContent":["/**\n * Delete Confirmation Dialog\n */\nimport React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nclass DeleteConfirmationDialog extends Component {\n\n   state = {\n      open: false\n   }\n\n   // open dialog\n   open() {\n      this.setState({ open: true });\n   }\n\n   // close dialog\n   close() {\n      this.setState({ open: false });\n   }\n\n   render() {\n      const { title, message, onConfirm } = this.props;\n      return (\n         <Dialog\n            open={this.state.open}\n            onClose={() => this.close()}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n         >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n               <DialogContentText id=\"alert-dialog-description\">\n                  {message}\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button onClick={() => this.close()} className=\"btn-danger text-white\">\n                  Cancel\n               </Button>\n               <Button onClick={onConfirm} className=\"btn-primary text-white\" autoFocus>\n                  Yes\n               </Button>\n            </DialogActions>\n         </Dialog>\n      );\n   }\n}\n\nexport default DeleteConfirmationDialog;\n","/**\n * New Customers Widget\n */\nimport React, { Component, Fragment } from 'react';\nimport update from 'react-addons-update';\nimport {\n\tModal,\n\tModalHeader,\n\tModalBody,\n\tModalFooter,\n\tForm,\n\tFormGroup,\n\tLabel,\n\tInput\n} from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\n// api\nimport api from 'api';\n\n// intl messages\nimport IntlMessages from 'util/IntlMessages';\n\n// rct section loader\nimport RctSectionLoader from 'components/RctSectionLoader/RctSectionLoader';\n\nimport DeleteConfirmationDialog from 'components/DeleteConfirmationDialog/DeleteConfirmationDialog';\n\nclass NewCustomers extends Component {\n\n\tstate = {\n\t\tsectionReload: false,\n\t\tnewCustomers: null,\n\t\tselectedDeletedCustomer: null,\n\t\teditCustomerModal: false,\n\t\teditCustomer: null,\n\t\tsnackbar: false,\n\t\tsuccessMessage: '',\n\t\taddNewCustomerForm: false,\n\t\taddNewCustomerDetails: {\n\t\t\tcustomer_email: '',\n\t\t\tcustomer_name: '',\n\t\t\tid: '',\n\t\t\tphoto_url: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getNewCustomers();\n\t}\n\n\t// get new customers\n\tgetNewCustomers() {\n\t\tthis.setState({ sectionReload: true });\n\t\tapi.get('newCustomers.js')\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({ newCustomers: response.data, sectionReload: false });\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ newCustomers: null, sectionReload: false });\n\t\t\t})\n\t}\n\n\t// on delete customer\n\tonDeleteCustomer(customer) {\n\t\tthis.refs.deleteConfirmationDialog.open();\n\t\tthis.setState({ selectedDeletedCustomer: customer });\n\t}\n\n\t// delete customer\n\tdeleteCustomer() {\n\t\tthis.refs.deleteConfirmationDialog.close();\n\t\tthis.setState({ sectionReload: true });\n\t\tlet newCustomers = this.state.newCustomers;\n\t\tlet index = newCustomers.indexOf(this.state.selectedDeletedCustomer);\n\t\tsetTimeout(() => {\n\t\t\tnewCustomers.splice(index, 1);\n\t\t\tthis.setState({\n\t\t\t\tnewCustomers,\n\t\t\t\tsnackbar: true,\n\t\t\t\tsuccessMessage: 'Customer Deleted Successfully',\n\t\t\t\tsectionReload: false\n\t\t\t});\n\t\t}, 1500);\n\t}\n\n\t// edit customer\n\tonEditCustomer(customer) {\n\t\tthis.setState({ editCustomerModal: true, editCustomer: customer, addNewCustomerForm: false });\n\t}\n\n\t// toggle edit customer modal\n\ttoggleEditCustomerModal = () => {\n\t\tthis.setState({\n\t\t\teditCustomerModal: !this.state.editCustomerModal\n\t\t});\n\t}\n\n\t// submit customer edit form\n\tonSubmitCustomerEditDetailForm() {\n\t\tconst { editCustomer, newCustomers } = this.state;\n\t\tif (editCustomer.customer_name !== '' && editCustomer.customer_email !== '') {\n\t\t\tthis.setState({\n\t\t\t\teditCustomerModal: false,\n\t\t\t\tsectionReload: true\n\t\t\t});\n\t\t\tlet indexOfCustomer;\n\t\t\tfor (let i = 0; i < newCustomers.length; i++) {\n\t\t\t\tconst customer = newCustomers[i];\n\t\t\t\tif (customer.customer_id === editCustomer.customer_id) {\n\t\t\t\t\tindexOfCustomer = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet self = this;\n\t\t\tsetTimeout(() => {\n\t\t\t\tself.setState({ sectionReload: false, snackbar: true, successMessage: 'Customer Updated Success' });\n\t\t\t\tself.setState({\n\t\t\t\t\tnewCustomers: update(newCustomers,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[indexOfCustomer]: { $set: editCustomer }\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t}, 1500);\n\t\t}\n\t}\n\n\t// on change customer details\n\tonChangeCustomerDetails(key, value) {\n\t\tthis.setState({\n\t\t\teditCustomer: {\n\t\t\t\t...this.state.editCustomer,\n\t\t\t\t[key]: value\n\t\t\t}\n\t\t});\n\t}\n\n\t// add new customer\n\taddNewCustomer() {\n\t\tthis.setState({\n\t\t\teditCustomerModal: true,\n\t\t\taddNewCustomerForm: true,\n\t\t\teditCustomer: null,\n\t\t\taddNewCustomerDetails: {\n\t\t\t\tcustomer_email: '',\n\t\t\t\tcustomer_name: '',\n\t\t\t\tid: '',\n\t\t\t\tphoto_url: ''\n\t\t\t}\n\t\t});\n\t}\n\n\t// on change customer add new form value\n\tonChangeCustomerAddNewForm(key, value) {\n\t\tthis.setState({\n\t\t\taddNewCustomerDetails: {\n\t\t\t\t...this.state.addNewCustomerDetails,\n\t\t\t\t[key]: value\n\t\t\t}\n\t\t})\n\t}\n\n\t// on submit add new customer form\n\tonSubmitAddNewCustomerForm() {\n\t\tconst { addNewCustomerDetails } = this.state;\n\t\tif (addNewCustomerDetails.customer_name !== '' && addNewCustomerDetails.customer_email !== '') {\n\t\t\tthis.setState({ editCustomerModal: false, sectionReload: true });\n\t\t\tlet newCustomer = addNewCustomerDetails\n\t\t\tnewCustomer.id = new Date().getTime();\n\t\t\t\tnewCustomer.photo_url = '';\n\t\t\tlet newCustomers = this.state.newCustomers;\n\t\t\tlet self = this;\n\t\t\tsetTimeout(() => {\n\t\t\t\tnewCustomers.push(newCustomer);\n\t\t\t\tself.setState({\n\t\t\t\t\tnewCustomers,\n\t\t\t\t\tsectionReload: false,\n\t\t\t\t\tsnackbar: true,\n\t\t\t\t\tsuccessMessage: 'Customer Added Successfully'\n\t\t\t\t});\n\t\t\t}, 1500);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { newCustomers, sectionReload, editCustomerModal, addNewCustomerForm, editCustomer, snackbar, successMessage, addNewCustomerDetails } = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{sectionReload &&\n\t\t\t\t\t<RctSectionLoader />\n\t\t\t\t}\n\t\t\t\t<Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={290} autoHide>\n\t\t\t\t\t<ul className=\"list-group new-customer-list\">\n\t\t\t\t\t\t{newCustomers && newCustomers.map((customer, key) => (\n\t\t\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between\" key={key}>\n\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-start\">\n\t\t\t\t\t\t\t\t\t<div className=\"media\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"media-left mr-15\">\n\t\t\t\t\t\t\t\t\t\t\t{customer.photo_url === '' ?\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar>{customer.customer_name.charAt(0)}</Avatar>\n\t\t\t\t\t\t\t\t\t\t\t\t: <img src={customer.photo_url} alt=\"project logo\" className=\"media-object rounded-circle\" width=\"40\" height=\"40\" />\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"media-body\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-block fs-14\">{customer.customer_name}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-block fs-12 text-muted\">{customer.customer_email}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-end\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"text-primary\" onClick={() => this.onEditCustomer(customer)}>\n\t\t\t\t\t\t\t\t\t\t<i className=\"zmdi zmdi-edit\"></i>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"text-danger\" onClick={() => this.onDeleteCustomer(customer)}>\n\t\t\t\t\t\t\t\t\t\t<i className=\"zmdi zmdi-close\"></i>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</Scrollbars>\n\t\t\t\t<div className=\"d-flex p-3\">\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => this.addNewCustomer()}><IntlMessages id=\"widgets.addNew\" /></Button>\n\t\t\t\t</div>\n\t\t\t\t{/* Delete Customer Confirmation Dialog */}\n\t\t\t\t<DeleteConfirmationDialog\n\t\t\t\t\tref=\"deleteConfirmationDialog\"\n\t\t\t\t\ttitle=\"Are You Sure Want To Delete?\"\n\t\t\t\t\tmessage=\"Are You Sure Want To Delete Permanently This Customer.\"\n\t\t\t\t\tonConfirm={() => this.deleteCustomer()}\n\t\t\t\t/>\n\t\t\t\t{/* Customer Edit Modal*/}\n\t\t\t\t{editCustomerModal &&\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tisOpen={editCustomerModal}\n\t\t\t\t\t\ttoggle={this.toggleEditCustomerModal}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ModalHeader toggle={this.toggleEditCustomerModal}>\n\t\t\t\t\t\t\t{addNewCustomerForm ? 'Add New Customer' : 'Edit Customer'}\n\t\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t\t{addNewCustomerForm ?\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t<Label for=\"customerName\">Name</Label>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"customerName\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={addNewCustomerDetails.customer_name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.onChangeCustomerAddNewForm('customer_name', e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t<Label for=\"customerEmail\">Email</Label>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"customerEmail\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={addNewCustomerDetails.customer_email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.onChangeCustomerAddNewForm('customer_email', e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t: <Form>\n\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t<Label for=\"customerId\">Id</Label>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"customerId\"\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={editCustomer.customer_id}\n\t\t\t\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t<Label for=\"customerName\">Name</Label>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"customerName\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={editCustomer.customer_name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.onChangeCustomerDetails('customer_name', e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t<Label for=\"customerEmail\">Email</Label>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"customerEmail\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={editCustomer.customer_email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.onChangeCustomerDetails('customer_email', e.target.value)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t\t{addNewCustomerForm ?\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => this.onSubmitAddNewCustomerForm()}><IntlMessages id=\"button.add\" /></Button>{' '}\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" className=\"btn-danger text-white\" onClick={this.toggleEditCustomerModal}><IntlMessages id=\"button.cancel\" /></Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: <div><Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => this.onSubmitCustomerEditDetailForm()}><IntlMessages id=\"button.update\" /></Button>{' '}\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" className=\"btn-danger text-white\" onClick={this.toggleEditCustomerModal}><IntlMessages id=\"button.cancel\" /></Button></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t</Modal>\n\t\t\t\t}\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\thorizontal: 'center',\n\t\t\t\t\t}}\n\t\t\t\t\topen={snackbar}\n\t\t\t\t\tonClose={() => this.setState({ snackbar: false })}\n\t\t\t\t\tautoHideDuration={2000}\n\t\t\t\t\tmessage={<span id=\"message-id\">{successMessage}</span>}\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default NewCustomers;\n","/**\n * Rct Section Loader\n */\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst RctSectionLoader = () => (\n    <div className=\"d-flex justify-content-center loader-overlay\">\n        <CircularProgress />\n    </div>\n);\n\nexport default RctSectionLoader;\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);"],"sourceRoot":""}